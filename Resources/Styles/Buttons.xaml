<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.com/icons/">
    
    <Style x:Key="BtnBase" TargetType="ButtonBase">
        <Setter Property="Padding" Value="3,5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="DarkBlue"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="DarkBlue"/>                            
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="BorderBrush" Value="Gray" />
    </Style>
    <Style x:Key="PrimaryBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="BorderBrush" Value="Blue" />
    </Style>
    <Style x:Key="SuccessBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Green" />
        <Setter Property="BorderBrush" Value="Green" />
    </Style>
    <Style x:Key="WarningBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="BorderBrush" Value="Orange" />
    </Style>
    <Style x:Key="DangerBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="BorderBrush" Value="Red" />
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="BorderBrush" Value="Gray" />
    </Style>
    
    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Blue"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               StrokeDashArray="1 2" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Padding" Value="3,5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />        
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource CustomButtonTemplate}" />
    </Style>

    <DropShadowEffect x:Key="ShadowDepth1" ShadowDepth="1" />

    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                SnapsToDevicePixels="true">
            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}">
                <fa:ImageAwesome x:Name="icon"
                                 Height="12" 
                                 Icon="Solid_Check" 
                                 Foreground="Green" 
                                 Margin="0,0,3,0" 
                                 Effect="{StaticResource ShadowDepth1}"/>
                <ContentPresenter x:Name="contentPresenter" 
                                  Focusable="False"
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Green"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter TargetName="icon" Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkGreen"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Padding" Value="3,5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Green"/>
        <Setter Property="Foreground" Value="Green"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="RemoveButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
            CornerRadius="5"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            SnapsToDevicePixels="true">
            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                   Margin="{TemplateBinding Padding}">
                <fa:ImageAwesome x:Name="icon"
                                 Height="12" 
                                 Icon="Solid_Times" 
                                 Foreground="White" 
                                 Margin="0,0,3,0" 
                                 Effect="{StaticResource ShadowDepth1}" />
                <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False"
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="White"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                <Setter Property="Foreground" Value="Red"/>
                <Setter TargetName="icon" Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="Pink"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Padding" Value="3,5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="Red"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource RemoveButtonTemplate}" />
    </Style>
    

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />

    <ControlTemplate x:Key="BrushButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
             CornerRadius="5"
             Background="{TemplateBinding Background}" 
             BorderBrush="{TemplateBinding BorderBrush}" 
             BorderThickness="{TemplateBinding BorderThickness}" 
             SnapsToDevicePixels="true">
            
            <ContentPresenter x:Name="contentPresenter" 
                           Focusable="False" 
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                           Margin="{TemplateBinding Padding}" 
                           RecognizesAccessKey="True" 
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" TargetName="border" Value="Blue"/>-->
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BrushButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="3,5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource BrushButtonTemplate}" />
    </Style>

</ResourceDictionary>